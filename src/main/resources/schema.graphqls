type Query {
    books: [Book]
    book(id: ID): Book
    booksWithFilter(filters: BookFilter, pagination: Pagination): [Book]
    booksAggregator(filters: BookFilter, aggregation:AggregationInput): Float
}

type Book {
    id: ID
    description: String
    title: String
    price: Int
    authorId: Int
    author: Author!
}

type Author {
    id: ID
    name: String
    age: Int
    books: [Book]
}

input BookFilter {
    priceEq: Int
    priceGt: Int
    priceGe: Int
    priceLt: Int
    priceLe: Int
}

input Pagination {
    limit: Int
    offset: Int
}

enum SortTypeEnum {
    DESC
    ASC
}

input SortByInput {
    type: SortTypeEnum
    field: String
}

enum AggregationEnum {
    COUNT
    SUM
    MIN
    MAX
    AVERAGE
}

input AggregationInput {
    type: AggregationEnum
    field: String
}